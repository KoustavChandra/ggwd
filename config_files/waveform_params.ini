; -----------------------------------------------------------------------------
; DECLARE ARGUMENTS
; -----------------------------------------------------------------------------

[variable_args]
; Waveform parameters that will vary in MCMC
mass1 =
mass2 =
spin1z =
spin2z =
ra =
dec =
coa_phase =
inclination =
polarization =
injection_snr =


[static_args]
; Waveform parameters that will not change in MCMC
approximant = SEOBNRv4
domain = time
f_lower = 18
distance = 100
waveform_length = 128

; original_sampling_rate = Sampling rate of raw HDF files (usually 4096 Hz)
; target_sampling_rate = Desired sampling rate for sample creation
original_sampling_rate = 4096
target_sampling_rate = 2048

; delta_t = 1 / target_sampling_rate
delta_t = 0.00048828125

; delta_f = 1 / waveform_length
delta_f = .0078125

; td_length = waveform_length * target_sampling_rate
td_length = 262144

; fd_length = td_length / 2 + 1
fd_length = 131073

; Define the lower and upper bound for the bandpass filter (in Hertz)
bandpass_lower = 20
bandpass_upper = 2048

; Define how to align the sample around the event time. By convention, the
; event time is the H1 time!
; The sum of these values will be the the sample length!
seconds_before_event = 5.5
seconds_after_event = 2.5



; -----------------------------------------------------------------------------
; DEFINE DISTRIBUTIONS FOR PARAMETERS
; -----------------------------------------------------------------------------

[prior-mass1]
; Prior for mass1
name = uniform
min-mass1 = 10.
max-mass1 = 80.


[prior-mass2]
; Prior for mass2
name = uniform
min-mass2 = 10.
max-mass2 = 80.


[prior-spin1z]
; Prior for spin1z
name = uniform
min-spin1z = 0
max-spin1z = 0.998


[prior-spin2z]
; Prior for spin2z
name = uniform
min-spin2z = 0
max-spin2z = 0.998


[prior-injection_snr]
; Prior for the injection SNR
name = uniform
min-injection_snr = 5
max-injection_snr = 20


[prior-coa_phase]
; Coalescence phase prior
name = uniform_angle


[prior-inclination]
; Inclination prior
name = sin_angle


[prior-ra+dec]
; Sky position prior
name = uniform_sky


[prior-polarization]
; Polarization prior
name = uniform_angle